blank|
citation|<?php class Citation_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'citations' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'citations', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'citations', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'citations' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("cit_id"=>"number");$mandatories = array("cit_id");$sanatations = array("cit_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("author"=>"alfanum", "source"=>"alfanum", "pub_yr"=>"number", "title"=>"alfanum", "source_secondary"=>"alfanum", "pub_date"=>"alfanum", "isbn_id"=>"number", "cit_desc"=>"alfanum", "internet_address"=>"alfanum", "pages"=>"number");$mandatories = array("author", "source", "pub_yr", "title");$sanatations = array("author"=>"alfanum", "source"=>"alfanum", "pub_yr"=>"number", "title"=>"alfanum", "source_secondary"=>"alfanum", "pub_date"=>"alfanum", "isbn_id"=>"number", "cit_desc"=>"alfanum", "internet_address"=>"alfanum", "pages"=>"number");$unique = array("title"=>"citations");if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array("cit_id"=>"number", "author"=>"alfanum", "source"=>"alfanum", "pub_yr"=>"number", "title"=>"alfanum", "source_secondary"=>"alfanum", "pub_date"=>"alfanum", "isbn_id"=>"number", "cit_desc"=>"alfanum", "internet_address"=>"alfanum", "pages"=>"number");$mandatories = array("cit_id");$sanatations = array("cit_id"=>"number", "author"=>"alfanum", "source"=>"alfanum", "pub_yr"=>"number", "title"=>"alfanum", "source_secondary"=>"alfanum", "pub_date"=>"alfanum", "isbn_id"=>"number", "cit_desc"=>"alfanum", "internet_address"=>"alfanum", "pages"=>"number");$unique = array("title"=>"citations");if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("cit_id"=>"number");$mandatories = array("cit_id");$sanatations = array("cit_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Citation_model.php */
comment|<?php class Comment_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'cit_cmts' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'cit_cmts', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'cit_cmts', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'cit_cmts' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("cit_id"=>"number");$mandatories = array("cit_id");$sanatations = array("cit_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("cit_id"=>"number", "author"=>"alfanum", "cmt_body"=>"alfanum", "cmt_date"=>"number", "u_id"=>"number");$mandatories = array("cit_id", "author", "cmt_body", "cmt_date", "u_id");$sanatations = array("cit_id"=>"number", "author"=>"alfanum", "cmt_body"=>"alfanum", "cmt_date"=>"number", "u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array("cmt_id"=>"number", "u_id"=>"number", "cit_id"=>"number", "author"=>"alfanum", "cmt_body"=>"alfanum", "cmt_date"=>"number");$mandatories = array("cmt_id", "u_id");$sanatations = array("cmt_id"=>"number", "u_id"=>"number", "cit_id"=>"number", "author"=>"alfanum", "cmt_body"=>"alfanum", "cmt_date"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("cmt_id"=>"number", "u_id"=>"number");$mandatories = array("cmt_id", "u_id");$sanatations = array("cmt_id"=>"number", "u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Comment_model.php */
earn|<?php class Earn_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'user_points' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'user_points', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'user_points', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'user_points' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("u_id"=>"number");$mandatories = array("u_id");$sanatations = array("u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("u_id"=>"number", "pts_total"=>"number");$mandatories = array("u_id", "pts_total");$sanatations = array("u_id"=>"number", "pts_total"=>"number");$unique = array("u_id"=>"user_profile");if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array("u_id"=>"number", "pts_total"=>"number");$mandatories = array("u_id", "pts_total");$sanatations = array("u_id"=>"number", "pts_total"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("u_id"=>"number");$mandatories = array("u_id");$sanatations = array("u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Earn_model.php */
favorite|<?php class Favorite_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'user_saved_lists' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'user_saved_lists', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'user_saved_lists', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'user_saved_lists' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("u_id"=>"number");$mandatories = array("u_id");$sanatations = array("u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("list_name"=>"alfanum", "u_id"=>"number");$mandatories = array("list_name", "u_id");$sanatations = array("list_name"=>"alfanum", "u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array("list_id"=>"number", "u_id"=>"number", "list_name"=>"alfanum");$mandatories = array("list_id", "u_id");$sanatations = array("list_id"=>"number", "u_id"=>"number", "list_name"=>"alfanum");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("list_id"=>"number", "u_id"=>"number");$mandatories = array("list_id", "u_id");$sanatations = array("list_id"=>"number", "u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Favorite_model.php */
meta|<?php class Meta_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'cit_meta' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'cit_meta', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'cit_meta', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'cit_meta' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("cit_id"=>"number");$mandatories = array("cit_id");$sanatations = array("cit_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("cit_id"=>"number", "amnt_votes"=>"number", "avg_rating"=>"number", "added_by"=>"number", "cit_views_ct"=>"number", "cit_cmts_ct"=>"number");$mandatories = array("cit_id");$sanatations = array("cit_id"=>"number", "amnt_votes"=>"number", "avg_rating"=>"number", "added_by"=>"number", "cit_views_ct"=>"number", "cit_cmts_ct"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array("cit_id"=>"number", "amnt_votes"=>"number", "avg_rating"=>"number", "added_by"=>"number", "cit_views_ct"=>"number", "cit_cmts_ct"=>"number");$mandatories = array("cit_id");$sanatations = array("cit_id"=>"number", "amnt_votes"=>"number", "avg_rating"=>"number", "added_by"=>"number", "cit_views_ct"=>"number", "cit_cmts_ct"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("cit_id"=>"number");$mandatories = array("cit_id");$sanatations = array("cit_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Meta_model.php */
share|<?php class Share_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'user_shares' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'user_shares', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'user_shares', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'user_shares' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("sender_id"=>"number");$mandatories = array("sender_id");$sanatations = array("sender_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("sender_id"=>"number", "recipient_id"=>"number", "cit_id"=>"number", "timestamp"=>"number", "message"=>"alfanum");$mandatories = array("sender_id", "recipient_id", "cit_id", "timestamp");$sanatations = array("sender_id"=>"number", "recipient_id"=>"number", "cit_id"=>"number", "timestamp"=>"number", "message"=>"alfanum");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array();$mandatories = array();$sanatations = array();$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("sender_id"=>"number", "recipient_id"=>"number", "timestamp"=>"number");$mandatories = array("sender_id", "recipient_id", "timestamp");$sanatations = array("sender_id"=>"number", "recipient_id"=>"number", "timestamp"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Share_model.php */
tag|<?php class Tag_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'all_tags' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'all_tags', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'all_tags', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'all_tags' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("tag_id"=>"number");$mandatories = array("tag_id");$sanatations = array("tag_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("tag"=>"alfanum", "cat_id"=>"number");$mandatories = array("tag", "cat_id");$sanatations = array("tag"=>"alfanum", "cat_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array("tag_id"=>"number", "tag"=>"alfanum");$mandatories = array("tag_id", "tag");$sanatations = array("tag_id"=>"number", "tag"=>"alfanum");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("tag_id"=>"number");$mandatories = array("tag_id");$sanatations = array("tag_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Tag_model.php */
user|<?php class User_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'user_profile' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'user_profile', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'user_profile', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'user_profile' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("u_id"=>"number");$mandatories = array("u_id");$sanatations = array("u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("email"=>"alfanum", "password"=>"alfanum", "display_name"=>"alfanum");$mandatories = array("email", "password");$sanatations = array("email"=>"alfanum", "password"=>"alfanum", "display_name"=>"alfanum");$unique = array("email"=>"user_profile");if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array("u_id"=>"number", "email"=>"alfanum", "password"=>"alfanum", "display_name"=>"alfanum");$mandatories = array("u_id");$sanatations = array("u_id"=>"number", "email"=>"alfanum", "password"=>"alfanum", "display_name"=>"alfanum");$unique = array("email"=>"user_profile");if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("u_id"=>"number");$mandatories = array("u_id");$sanatations = array("u_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of User_model.php */
vote|<?php class Vote_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( 'user_cit_ratings' );return $dbResult->result();}function put ( $putArray ) { $dbInsert = $this->db->insert( 'user_cit_ratings', $putArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function post ( $postArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( 'user_cit_ratings', $postArray );if ($dbUpdate) {return true;}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( 'user_cit_ratings' );}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case 'get': $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case 'put': $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case 'post': $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case 'delete': $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {$validations = array("u_id"=>"number", "cit_id"=>"number");$mandatories = array("u_id", "cit_id");$sanatations = array("u_id"=>"number", "cit_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {$validations = array("u_id"=>"number", "cit_id"=>"number", "rt_val"=>"number");$mandatories = array("u_id", "cit_id", "rt_val");$sanatations = array("u_id"=>"number", "cit_id"=>"number", "rt_val"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {$validations = array("u_id"=>"number", "cit_id"=>"number", "rt_val"=>"number");$mandatories = array("u_id", "cit_id", "rt_val");$sanatations = array("u_id"=>"number", "cit_id"=>"number", "rt_val"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {$validations = array("u_id"=>"number", "cit_id"=>"number");$mandatories = array("u_id", "cit_id");$sanatations = array("u_id"=>"number", "cit_id"=>"number");$unique = array();if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Vote_model.php */
